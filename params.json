{"name":"Speech.js","tagline":"Making censorship circumvention as easy as signing into Facebook","body":"# Introduction\r\nSpeech.js is a thin wrapper which translates URI's between the traditional domain name system and an Alternative Domain Name System (altDNS), transforming `example.alt`-> `example.jsdns.tld`.  Speech.js is the reference implementation of the JavaScript Domain Name System client specification and [Speech.is](www.speech.is) (pronounced \"speech DOT is\") provides access to the [.bit decentralized alternative domain name system](http://dot-bit.org/Main_Page) and serves as the reference deployment of Speech.js.\r\n\r\n# Speech.is\r\nWhile getting to the homepage still relies on the traditional DNS system, Speech.is provides two additional defenses against nation-wide censorship. The first is the location of the Speech.is servers and domain name: the [data-haven of Iceland](https://en.wikipedia.org/wiki/International_Modern_Media_Institute).  This makes it very difficult to hold Speech.is legally liable for any content hosted in other countries.\r\n\r\nThe second is political: the *.speech.is second level domain name injects _free speech_ into the pandering of politicians trying to censor the internet.  Even if a country chooses to censor a specific domain, (such as wikileaks.speech.is) Speech.js offers routing using the hash/fragment convention: `wikileaks.speech.is` -> `speech.is#wikileaks.bit`.  The `#wikileaks.bit` portion of the url isn't even sent to the webserver, let alone included in the low-level DNS requests.  Politician seeking to restrict our online speech rights will be forced to advocate for censoring `speech.is` itself.\r\n\r\nAnd this is only the beginning, just wait what we will be capable of in 5 years.\r\n\r\n## Legal\r\nSpeech.js, Speech.is, and .bit DNS are all parts of a larger effort to end the threat of SOPA and other state-sponsored [DNS censorship](https://www.eff.org/free-speech-weak-link#dns) regimes.  A Speech.js site neither hosts nor links to any content deemed objectionable in major western democracies. As a result the webhost, the upstream carriers, and the owners of the domain name are all immune from legal and political censorship.\r\n\r\n## User Experience\r\nThe user experience for visiting a Speech.js website is identical to that of any other website with a login requirement, such as the New York Times or Facebook. Speech.js relies on the _users_ social network to provide the initial routing information, stores this information *in the browser* and automatically updates it whenever changes occur. From then on (even if the user restarts their computer) they are never prompted to login again.\r\n\r\n## Scaling\r\nUnlike server-side proxies or content mirrors, a Speech.js deployment can easily scale to virtually any traffic load very cheaply.  A minimal Speech.js deployment consists of a single static HTML file which loads the CSS and JavaScript files from the free [cdnjs](http://cdnjs.com/) content delivery network. Combined with Cloudflare's free HTML caching a Speech.js deployment can handle the traffic load of a top-5 website for around [$20/month](https://docs.google.com/spreadsheet/ccc?key=0Am9LbxJR3-Q-dFQ3c2lJa1BVejdrT2JnZjBRWm83YlE&usp=sharing).\r\n\r\n## Security\r\nWe believe that we will be able to offer a level at least as high as that of any CDN hosted JavaScript provider, your local DNS server, or your favorite package manager's local mirror.  In the future, we believe we will be able to offer even stronger security guarantees.  \r\n\r\n## Technical Breakdown of visiting example.jsdns.tld\r\n\r\n### navigationStart\r\nWhatever the URL, be it wikipedia.jsdns.tld or wikileaks.jsdns.tld, a Speech.js deployment serves the exact same webpage to visitors. If the user has not visited the website before they prompted to log into a social network. Speech.js scans their friends pages for compatible DNS publisher links and presents them to the user in order of popularity.  Ultimately, the user must decide which DNS publisher(s) s/he trusts based on the choices of her/his friends.\r\n\r\n### redirectStart\r\nThese feeds can be as simple as private friend to friend message with raw JSON, an app that the user or their friends have authorized, or jsDNS entries published as posts.   Feeds can be customized for each subscriber, enabling publishers to hand out **unique endpoints for every user**.\r\n\r\n### domainLookupStart\r\nAfter retrieving the information the parent page stores DNS records in [localStorage](http://en.wikipedia.org/wiki/Web_storage) and then loads the destination website using an iFrame.  The parent page is hidden and the child page is shown as if it were the main page using the new [`seamless`](http://www.whatwg.org/specs/web-apps/current-work/multipage/the-iframe-element.html#attr-iframe-seamless) attribute.  The destination site can cooperatively pass URL updates to the parent page to provide a truly seamless user experience.\r\n\r\n### Authors and Contributors\r\nConceived of and developed by [indolering](indolering.com).","google":"UA-45188614-1","note":"Don't delete this file! It's used internally to help with page regeneration."}